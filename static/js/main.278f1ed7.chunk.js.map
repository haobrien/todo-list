{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","task","handleDelete","bind","handleUpdate","handleChange","toggleForm","markDone","this","id","setState","delete","evt","preventDefault","edit","target","name","value","onSubmit","className","type","onChange","completed","onClick","Component","NewTodoForm","handleSubmit","add","uuid","class","for","placeholder","TodoList","todos","addTodo","deleteTodo","editTodo","taskId","newTodos","map","t","filter","todoList","todo","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.278f1ed7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Todo.css'\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isEditing: false,\r\n            task: this.props.task\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.toggleForm = this.toggleForm.bind(this)\r\n        this.markDone = this.markDone.bind(this)\r\n    }\r\n\r\n    markDone() {\r\n        this.props.markDone(this.props.id)\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.delete(this.props.id)\r\n    }\r\n\r\n    handleUpdate(evt) {\r\n        evt.preventDefault()\r\n        this.props.edit(this.props.id, this.state.task)\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (\r\n                <form onSubmit={this.handleUpdate} className=\"saveForm\">\r\n                    <input className=\"form__input\"\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        id=\"task\"\r\n                        value={this.state.task}\r\n                        onChange={this.handleChange} />\r\n                    <button className=\"iconButton\"><span className=\"fa fa-check\"></span></button>\r\n                </form>\r\n            )\r\n        } else {\r\n            result = (\r\n                <div>\r\n                    <li className={this.props.completed ? 'complete' : ''}\r\n                        onClick={this.markDone}>\r\n                        {this.props.task}\r\n                    </li>\r\n                    <div className=\"buttonGroup\">\r\n                        <button className=\"iconButton\"\r\n                            onClick={this.toggleForm}><span className=\"fa fa-edit\"></span></button>\r\n                        <button className=\"iconButton\"\r\n                            onClick={this.handleDelete}><span className=\"fa fa-trash\"></span></button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return result\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { task: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        this.props.add({ ...this.state, id: uuid(), completed: false })\r\n        this.setState({ task: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label class=\"form__label\" for=\"todo\">~ Today I need to ~</label>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input className=\"form__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"New Task\"\r\n                        name=\"task\"\r\n                        id=\"task\"\r\n                        value={this.state.task}\r\n                        onChange={this.handleChange} />\r\n                    <button className=\"button\"><span>Add</span></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;\r\n","import React, { Component } from 'react'\r\nimport Todo from './Todo'\r\nimport NewTodoForm from './NewTodoForm'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: [\r\n                { task: 'Bathe the dogs', id: uuid(), completed: false },\r\n                { task: 'Shop for groceries', id: uuid(), completed: false },\r\n                { task: 'Binge watch Netflix', id: uuid(), completed: true }\r\n            ]\r\n        }\r\n        this.addTodo = this.addTodo.bind(this)\r\n        this.deleteTodo = this.deleteTodo.bind(this)\r\n        this.editTodo = this.editTodo.bind(this)\r\n        this.markDone = this.markDone.bind(this)\r\n    }\r\n\r\n    markDone(taskId) {\r\n        const newTodos = this.state.todos.map(t => {\r\n            if (t.id === taskId) {\r\n                return { ...t, completed: !t.completed }\r\n            }\r\n            return t\r\n        })\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    addTodo(task) {\r\n        this.setState({\r\n            todos: [...this.state.todos, task]\r\n        })\r\n    }\r\n\r\n    deleteTodo(taskId) {\r\n        this.setState({\r\n            todos: this.state.todos.filter(task => task.id !== taskId)\r\n        })\r\n    }\r\n\r\n    editTodo(taskId, task) {\r\n        const newTodos = this.state.todos.map(t => {\r\n            if (t.id === taskId) {\r\n                return { ...t, task: task }\r\n            }\r\n            return t\r\n        })\r\n        this.setState({ todos: newTodos })\r\n    }\r\n\r\n    render() {\r\n        const todoList = this.state.todos.map(todo => {\r\n            return <Todo\r\n                task={todo.task}\r\n                key={todo.id}\r\n                id={todo.id}\r\n                delete={this.deleteTodo}\r\n                edit={this.editTodo}\r\n                completed={todo.completed}\r\n                markDone={this.markDone} />\r\n        })\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"heading\">\r\n                    <img class=\"heading__img\" src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/756881/laptop.svg\" />\r\n                    <h1 className=\"heading__title\">To-Do List</h1>\r\n                </div>\r\n                <NewTodoForm add={this.addTodo} />\r\n                <ul className=\"toDoList\">\r\n                    {todoList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}